name: Flutter CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, ready_for_review, reopened]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1

      - run: flutter format --set-exit-if-changed .
      - run: flutter analyze --fatal-infos
    # - run: flutter test


  ios-build:
    name: iOS build
    runs-on: macos-latest
    needs: [analyze]
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1

      - run: flutter pub get
      - run: flutter build ios --release --no-codesign

      - if: ${{ github.event_name == 'push' }}
        name: 'Tar app'
        run: cd build/ios/iphoneos/ && tar -cvjf ios_release.tar.bz2 "Runner.app"

      - if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: ios_release
          path: build/ios/iphoneos/ios_release.tar.bz2


  android-build:
    name: Android build
    runs-on: ubuntu-latest
    needs: [analyze]
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '12.x'
      - uses: subosito/flutter-action@v1

      - run: flutter pub get
      - run: flutter build apk

      - if: ${{ github.event_name == 'push' }}
        name: 'Tar app'
        run: cd build/app/outputs/flutter-apk/ && tar -cvjf android_release.tar.bz2 "app-release.apk"

      - if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: android_release
          path: build/app/outputs/flutter-apk/android_release.tar.bz2


  macos-build:
    name: macOS build
    runs-on: macos-latest
    needs: [analyze]
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1

      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos

      - if: ${{ github.event_name == 'push' }}
        name: 'Tar app'
        run: cd build/macos/Build/Products/Release/ && tar -cvjf macos_release.tar.bz2 "Cabin Booking.app"

      - if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: macos_release
          path: build/macos/Build/Products/Release/macos_release.tar.bz2


  windows-build:
    name: Windows build
    runs-on: windows-latest
    needs: [analyze]
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1

      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows

      - if: ${{ github.event_name == 'push' }}
        name: 'Tar app'
        run: cd build/windows/runner/ && tar -cvzf windows_release.tar.gz Release

      - if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: windows_release
          path: build/windows/runner/windows_release.tar.gz


  web-build:
    name: Web build
    runs-on: ubuntu-latest
    needs: [analyze]
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1

      - run: flutter config --enable-web
      - run: flutter pub get
      - run: flutter build web

      - if: ${{ github.event_name == 'push' }}
        name: 'Tar app'
        run: cd build/ && tar -cvjf web_release.tar.bz2 web/

      - if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: web_release
          path: build/web_release.tar.bz2
