name: Flutter CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '.vscode/**'
      - 'android/**'
      - 'docs/**'
      - 'ios/**'
      - 'macos/**'
      - 'windows/**'
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'

  pull_request:
    branches: [main]
    types: [opened, synchronize, ready_for_review, reopened]
    paths-ignore:
      - '.vscode/**'
      - 'android/**'
      - 'docs/**'
      - 'ios/**'
      - 'macos/**'
      - 'windows/**'
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'

  release:
    types: [published]

  workflow_dispatch:
    inputs:
      build_name:
        description: 'Build name <x.y.z>'
        required: false
        type: string
      build_number:
        description: 'Build number'
        required: false
        type: string
      build_ios:
        description: 'Build iOS app'
        required: false
        type: boolean
      build_android:
        description: 'Build Android app'
        required: false
        type: boolean
      build_macos:
        description: 'Build macOS app'
        required: false
        type: boolean
      build_windows:
        description: 'Build Windows app'
        required: false
        type: boolean
      store_artifacts:
        description: 'Store build artifacts'
        required: false
        type: boolean

env:
  FLUTTER_SDK_VERSION: '2.10.4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event.pull_request.draft == false }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Verify formatting
        run: flutter format --output=none --set-exit-if-changed .

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze --no-pub --fatal-infos

      - name: Analyze Dart Code Metrics
        run: flutter pub run dart_code_metrics:metrics analyze lib

      - name: Run tests
        run: flutter test --coverage

      - name: Upload Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}


  ios-build:
    name: iOS build
    runs-on: macos-latest
    needs: [analyze]
    timeout-minutes: 15
    if: ${{ github.event.release.tag_name || github.event.inputs.build_ios == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Get tagged filename
        id: filename
        run: echo ::set-output name=artifact::ios_release_$(git describe --tags)

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS
        run: |
          flutter build ios --release --no-pub --no-codesign --obfuscate \
            --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Tar app
        working-directory: ./build/ios/iphoneos/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "Runner.app"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/ios/iphoneos/${{ steps.filename.outputs.artifact }}.tar.bz2


  android-build:
    name: Android build
    runs-on: ubuntu-latest
    needs: [analyze]
    timeout-minutes: 15
    if: ${{ false }} # ${{ github.event.release.tag_name || github.event.inputs.build_android == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Get tagged filename
        id: filename
        run: echo ::set-output name=artifact::android_release_$(git describe --tags)

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android
        run: |
          flutter build apk --no-pub --obfuscate --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Tar app
        working-directory: ./build/app/outputs/flutter-apk/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "app-release.apk"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/app/outputs/flutter-apk/${{ steps.filename.outputs.artifact }}.tar.bz2


  macos-build:
    name: macOS build
    runs-on: macos-latest
    needs: [analyze]
    timeout-minutes: 15
    if: ${{ github.event.release.tag_name || github.event.inputs.build_macos == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Get tagged filename
        id: filename
        run: echo ::set-output name=artifact::macos_release_$(git describe --tags)

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Enable macOS desktop support
        run: flutter config --enable-macos-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS
        run: |
          flutter build macos --no-pub --obfuscate --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Tar app
        working-directory: ./build/macos/Build/Products/Release/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "Cabin Booking.app"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/macos/Build/Products/Release/${{ steps.filename.outputs.artifact }}.tar.bz2


  windows-build:
    name: Windows build
    runs-on: windows-latest
    needs: [analyze]
    timeout-minutes: 15
    if: ${{ github.event.release.tag_name || github.event.inputs.build_windows == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Get tagged filename
        id: filename
        run: echo "::set-output name=artifact::windows_release_$(git describe --tags)"

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --no-pub --obfuscate --split-debug-info=cabin_booking/

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        name: Tar app
        working-directory: ./build/windows/runner/
        run: tar -cvzf ${ARTIFACT_FILENAME}.tar.gz "Release"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: ${{ github.event.inputs.store_artifacts == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/windows/runner/${{ steps.filename.outputs.artifact }}.tar.gz
