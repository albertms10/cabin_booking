name: Build CD

on:
  workflow_dispatch:
    inputs:
      build_name:
        description: "Build name <x.y.z>"
        required: false
        type: string
      build_number:
        description: "Build number"
        required: false
        type: string
      build_ios:
        description: "Build iOS app"
        required: false
        type: boolean
      build_android:
        description: "Build Android app"
        required: false
        type: boolean
      build_macos:
        description: "Build macOS app"
        required: false
        type: boolean
      build_windows:
        description: "Build Windows app"
        required: false
        type: boolean
      store_artifacts:
        description: "Store build artifacts"
        required: false
        type: boolean

env:
  FLUTTER_SDK_VERSION: "3.7.8"

permissions:
  contents: read

jobs:
  ios-build:
    name: iOS build
    runs-on: macos-latest
    timeout-minutes: 15
    if: github.event.inputs.build_ios == 'true'

    steps:
      - uses: actions/checkout@b56e6a3d768b11aef1d4c73977caf6413c0d74c8 # v3
        with:
          fetch-depth: "0"

      - if: github.event.inputs.store_artifacts == 'true'
        name: Get tagged filename
        id: filename
        run: echo "::set-output name=artifact::ios_release_$(git describe --tags)"

      - name: Cache dependencies
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        id: cache
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ env.FLUTTER_SDK_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@62f096cacda5168a3bd7b95793373be14fa4fbaf # v2.13.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS
        run: |
          flutter build ios --release --no-pub --no-codesign --obfuscate \
            --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: github.event.inputs.store_artifacts == 'true'
        name: Tar app
        working-directory: ./build/ios/iphoneos/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "Runner.app"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: github.event.inputs.store_artifacts == 'true'
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/ios/iphoneos/${{ steps.filename.outputs.artifact }}.tar.bz2

  android-build:
    name: Android build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event.inputs.build_android == 'true'

    steps:
      - uses: actions/checkout@b56e6a3d768b11aef1d4c73977caf6413c0d74c8 # v3
        with:
          fetch-depth: "0"

      - if: github.event.inputs.store_artifacts == 'true'
        name: Get tagged filename
        id: filename
        run: echo "::set-output name=artifact::android_release_$(git describe --tags)"

      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: "temurin"
          java-version: 17

      - name: Cache dependencies
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        id: cache
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ env.FLUTTER_SDK_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@62f096cacda5168a3bd7b95793373be14fa4fbaf # v2.13.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android
        run: |
          flutter build apk --no-pub --obfuscate --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: github.event.inputs.store_artifacts == 'true'
        name: Tar app
        working-directory: ./build/app/outputs/flutter-apk/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "app-release.apk"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: github.event.inputs.store_artifacts == 'true'
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/app/outputs/flutter-apk/${{ steps.filename.outputs.artifact }}.tar.bz2

  macos-build:
    name: macOS build
    runs-on: macos-latest
    timeout-minutes: 15
    if: github.event.inputs.build_macos == 'true'

    steps:
      - uses: actions/checkout@b56e6a3d768b11aef1d4c73977caf6413c0d74c8 # v3
        with:
          fetch-depth: "0"

      - if: github.event.inputs.store_artifacts == 'true'
        name: Get tagged filename
        id: filename
        run: echo "::set-output name=artifact::macos_release_$(git describe --tags)"

      - name: Cache dependencies
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        id: cache
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ env.FLUTTER_SDK_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@62f096cacda5168a3bd7b95793373be14fa4fbaf # v2.13.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Enable macOS desktop support
        run: flutter config --enable-macos-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS
        run: |
          flutter build macos --no-pub --obfuscate --split-debug-info=cabin_booking/ \
            ${APP_BUILD_NAME:+"--build-name=$APP_BUILD_NAME"} \
            ${APP_BUILD_NUMBER:+"--build-number=$APP_BUILD_NUMBER"}
        env:
          APP_BUILD_NAME: ${{ github.event.inputs.build_name }}
          APP_BUILD_NUMBER: ${{ github.event.inputs.build_number }}

      - if: github.event.inputs.store_artifacts == 'true'
        name: Tar app
        working-directory: ./build/macos/Build/Products/Release/
        run: tar -cvjf ${ARTIFACT_FILENAME}.tar.bz2 "Cabin Booking.app"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: github.event.inputs.store_artifacts == 'true'
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/macos/Build/Products/Release/${{ steps.filename.outputs.artifact }}.tar.bz2

  windows-build:
    name: Windows build
    runs-on: windows-latest
    timeout-minutes: 15
    if: github.event.inputs.build_windows == 'true'

    steps:
      - uses: actions/checkout@b56e6a3d768b11aef1d4c73977caf6413c0d74c8 # v3
        with:
          fetch-depth: "0"

      - if: github.event.inputs.store_artifacts == 'true'
        name: Get tagged filename
        id: filename
        run: echo "::set-output name=artifact::windows_release_$(git describe --tags)"

      - name: Cache dependencies
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        id: cache
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pubspec-${{ env.FLUTTER_SDK_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@62f096cacda5168a3bd7b95793373be14fa4fbaf # v2.13.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --no-pub --obfuscate --split-debug-info=cabin_booking/

      - if: github.event.inputs.store_artifacts == 'true'
        name: Tar app
        working-directory: ./build/windows/runner/
        run: tar -cvzf ${ARTIFACT_FILENAME}.tar.gz "Release"
        env:
          ARTIFACT_FILENAME: ${{ steps.filename.outputs.artifact }}

      - if: github.event.inputs.store_artifacts == 'true'
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: ${{ steps.filename.outputs.artifact }}
          path: build/windows/runner/${{ steps.filename.outputs.artifact }}.tar.gz
